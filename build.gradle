apply plugin: 'build-announcements'
apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'maven-publish'

defaultTasks 'clean', 'check', 'assemble'

group = 'com.selesse'
version = '1.0.4'

ext {
    releaseDir = "release"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:16.0.1'
    compile 'com.google.code.findbugs:annotations:2.0.3'
    compile 'commons-cli:commons-cli:1.2'
    compile 'org.fusesource.jansi:jansi:1.11'

    testCompile 'commons-io:commons-io:2.4'
    testCompile 'com.github.stefanbirkner:system-rules:1.3.1'
    testCompile 'junit:junit:4.11'
}

clean.doLast {
    ant.delete(dir: releaseDir)
}

task release(dependsOn: ['clean', 'check', 'assemble', 'javadocJar', 'sourceJar']) << {
    out.println "Releasing jxlint-$version"
}

configure(release) {
    group = 'Publishing'
    description = 'Assemble all JARs needed for publishing (Javadoc, source, library).'
}

gradle.taskGraph.whenReady { taskGraph ->
    if (!taskGraph.hasTask(release)) {
        version += "-SNAPSHOT"
    }
}

jar {
    destinationDir = file(releaseDir)
    manifest {
        attributes 'Manifest-Version': version
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

// Set up publishing info
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
        }
    }
    repositories {
        mavenLocal()
    }
}
