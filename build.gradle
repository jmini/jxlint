apply plugin: 'build-announcements'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'java'
apply plugin: 'nexus'

defaultTasks 'clean', 'build'

group = 'com.selesse'
version = '1.4.0'
sourceCompatibility = 1.6

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7.1'
    }
}

repositories {
    mavenCentral()
}

ext {
    jettyVersion = '9.2.2.v20140723'
}

dependencies {
    compile "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    compile 'com.google.code.findbugs:annotations:2.0.3'
    compile 'com.google.guava:guava:16.0.1'
    compile 'commons-cli:commons-cli:1.2'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.fusesource.jansi:jansi:1.11'
    compile 'org.pegdown:pegdown:1.4.2'
    compile 'org.slf4j:slf4j-api:1.7.7'

    runtime "org.eclipse.jetty:jetty-jsp:${jettyVersion}"

    testCompile 'commons-io:commons-io:2.4'
    testCompile 'com.github.stefanbirkner:system-rules:1.3.1'
    testCompile 'junit:junit:4.11'
}

task release(dependsOn: ['clean', 'build', 'javadocJar', 'sourcesJar']) << {
    out.println "Releasing jxlint-$version"
}

release.mustRunAfter clean

configure(release) {
    group = 'Publishing'
    description = 'Assemble all JARs needed for publishing (Javadoc, source, library).'
}

gradle.taskGraph.whenReady { taskGraph ->
    if (!taskGraph.hasTask(release)) {
        version += "-SNAPSHOT"
    }
}

jar {
    manifest {
        attributes 'Manifest-Version': version
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

modifyPom {
    project {
        name 'jxlint'
        description 'Framework for doing static analysis in Java'
        url 'https://github.com/selesse/jxlint'
        inceptionYear '2013'

        scm {
            url 'https://github.com/selesse/jxlint'
            connection 'scm:https://selesse@github.com/selesse/jxlint.git'
            developerConnection 'scm:git://github.com/selesse/jxlint.git'
        }

        licenses {
            license {
                name 'MIT license'
                url 'http://opensource.org/licenses/mit-license.php'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'selesse'
                name 'Alex Selesse'
                email 'alex@selesse.com'
            }
        }
    }
}

checkstyle {
    configFile = new File(projectDir, "checkstyle.xml")
}
